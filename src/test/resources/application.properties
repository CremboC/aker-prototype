# Tomcat server
server.port=8080

#debug=true
#trace=true

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
spring.jpa.generate-ddl=true
spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.HSQLDialect


# Other properties to set on the JPA connection, if desired (see Spring Boot Reference guide (Appendix-A)
# spring.jpa.properties.*=
# spring.jpa.openInView=trues
# spring.jpa.database-platform=
# spring.jpa.database=
# spring.jpa.hibernate.naming-strategy=
# naming classname
# spring.jpa.hibernate.ddl-auto=
# defaults to create-drop for embedded dbs

# DataSourceAutoConfiguration
spring.datasource.name=store
spring.datasource.url=jdbc:hsqldb:mem:testdb
spring.datasource.schema=
spring.datasource.username=a
spring.datasource.password=
spring.datasource.max-active=100
spring.datasource.max-idle=8
spring.datasource.min-idle=8
spring.datasource.initial-size=10
spring.datasource.validation-query=SELECT 1 FROM INFORMATION_SCHEMA.SYSTEM_USERS
spring.datasource.test-on-borrow=true

# Advanced configuration...
# Can pre-populate with SQL loader script is required
# spring.datasource.intialize=false # populate using data.sql
# spring.datasource.schema=# a schema resource reference
# spring.datasource.platform=# the platform to use in the schema resource (schema-${platform}.sql)
# continue even if can't be initialized
spring.datasource.continueOnError=false
# spring.datasource.separator=;# statement separator in SQL initialization scripts

# thymeleaf
#spring.thymeleaf.cache = false

# json
spring.jackson.serialization.indent_output = true
